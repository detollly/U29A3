import { Connection } from "./Connection.js";
import { Maybe, QueryOptions } from "./definitions.js";
import { PreparedStatement } from "./PreparedStatement.js";
import { Protocol } from "./protocol/protocol.js";
export interface PortalExecuteResult {
    code: Protocol.BackendMessageCode;
    rows?: any[];
    command?: string;
    rowCount?: number;
}
export declare class Portal {
    private readonly _statement;
    private readonly _name?;
    private _columnFormat;
    constructor(statement: PreparedStatement, name: string);
    get connection(): Connection;
    get name(): Maybe<string>;
    bind(params: Maybe<any[]>, queryOptions: QueryOptions): Promise<void>;
    retrieveFields(): Promise<Protocol.RowDescription[]>;
    execute(fetchCount?: number): Promise<PortalExecuteResult>;
    close(): Promise<void>;
}
